name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build-release:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: ebguard-linux-x86_64.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: ebguard-macos-x86_64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: ebguard-macos-aarch64.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: ebguard-windows-x86_64.zip

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install LLVM (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-17-dev clang-17
        continue-on-error: true

      - name: Install LLVM (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install llvm@17
          echo "LLVM_SYS_170_PREFIX=$(brew --prefix llvm@17)" >> $GITHUB_ENV
        continue-on-error: true

      - name: Build with LLVM features
        id: build_full
        run: |
          cargo build --release --target ${{ matrix.target }}
        continue-on-error: true

      - name: Build without LLVM features (fallback)
        if: steps.build_full.outcome == 'failure'
        run: |
          cargo build --release --target ${{ matrix.target }} --no-default-features

      - name: Package (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p package
          cp target/${{ matrix.target }}/release/ebguard package/
          cp README.md package/
          cp LICENSE-* package/ 2>/dev/null || true
          tar czf ${{ matrix.name }} -C package .

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir package
          cp target/${{ matrix.target }}/release/ebguard.exe package/
          cp README.md package/
          cp LICENSE-* package/ 2>$null
          Compress-Archive -Path package/* -DestinationPath ${{ matrix.name }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ matrix.name }}

  update-homebrew-formula:
    needs: [create-release, build-release]
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ebpf-guardian
          repositories: '["homebrew-ebpf-guardian"]'

      - name: Get release info
        id: release_info
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Download tarball and calculate SHA256
        id: sha
        run: |
          curl -L -o source.tar.gz "https://github.com/ebpf-guardian/cli/archive/refs/tags/${{ steps.release_info.outputs.tag }}.tar.gz"
          SHA256=$(sha256sum source.tar.gz | cut -d' ' -f1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT

      - name: Update Homebrew Tap
        uses: dawidd6/action-homebrew-bump-formula@v3
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          tap: ebpf-guardian/homebrew-ebpf-guardian
          formula: ebpf-guardian
          tag: ${{ steps.release_info.outputs.tag }}
          revision: ${{ github.sha }}